const int maximumOccupancy = 50;
string usernames[maximumOccupancy];
string passwords[maximumOccupancy];
string roles[maximumOccupancy];
int countUsers = 0;
const int maximumOrders = 50;
int manufacturingOrdersCount = 0;
string manufacturingOrderFlavors[maximumOrders];      // flavors of the ordered cheetos will be stored here
int manufacturingOrderIndividualPrice[maximumOrders]; // price of each order will be stored in parallel here
int manufacturingOrderQuantity[maximumOrders];
const int maximumIngredients = 50;
int ingredientsOrdersCount = 0;
string ingredientsOrdered[maximumIngredients];
int quantitiesOfIngredientsOrdered[maximumIngredients];
const int maximumRecipeIngredients = 50;
int numberOfTableIngredients = 0;
string recipeIngredients[maximumRecipeIngredients];
const int maximumCheetosFlavors = 50;
int numberOfFlavorsAdded = 0;
string flavorsAdded[maximumCheetosFlavors];
const int maximumRequests = 10;
int numberOfRequests = 0;
string ingredientRequest[maximumRequests];
int ingredientRequestQuantity[maximumRequests];
string ingredientRequestEmployeeName[maximumRequests];
const int maximumShortage = 5;
int numberOfIngredientsInShortage = 0;
string ingredientsInShortage[maximumShortage];
int quantityInShortage[maximumShortage];
const int maximumExcess = 5;
int numberOfIngredientsInExcess = 0;
string ingredientsInExcess[maximumExcess];
int quantityInExcess[maximumExcess];
const int maximumFeedbacks = 50;
int numberOfFeedbacksAdded = 0;
string employeeFeedbacks[maximumFeedbacks];
string feedbackEmployeeName[maximumFeedbacks];
void addfeedbackFromEmployee(string employeeName);
const int maximumNumberOfRequestsForChangeInRecipes = 50;
int numberOfRequestsForChangeInRecipes = 0;
string requestedIngredientChangesInRecipes[maximumNumberOfRequestsForChangeInRecipes];
string nameOfEmployeesWhoRequestedTheAddition[maximumNumberOfRequestsForChangeInRecipes];